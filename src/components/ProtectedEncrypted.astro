---
const { src, placeholder = "输入密码查看内容" } = Astro.props;
const id = `pe-${Math.random().toString(36).slice(2)}`;
---
<div id={id}>
  <form>
    <input type="password" placeholder={placeholder} required />
    <button type="submit">解锁</button>
  </form>
  <div class="content" style="margin-top:.5rem;"></div>
</div>

<script is:inline>
const root = document.currentScript.previousElementSibling;
const form = root.querySelector('form');
const input = form.querySelector('input[type="password"]');
const contentEl = root.querySelector('.content');
const srcUrl = Astro.props.src;

function b64ToBuf(b64){ return Uint8Array.from(atob(b64), c => c.charCodeAt(0)).buffer; }
function concatBuf(a,b){ const ua=new Uint8Array(a.byteLength+b.byteLength); ua.set(new Uint8Array(a)); ua.set(new Uint8Array(b), a.byteLength); return ua.buffer; }

async function deriveKey(password, salt){
  const enc = new TextEncoder();
  const keyMaterial = await crypto.subtle.importKey('raw', enc.encode(password), 'PBKDF2', false, ['deriveKey']);
  return crypto.subtle.deriveKey(
    { name: 'PBKDF2', salt, iterations: 100000, hash: 'SHA-256' },
    keyMaterial,
    { name: 'AES-GCM', length: 256 },
    false,
    ['decrypt']
  );
}

form.addEventListener('submit', async (e) => {
  e.preventDefault();  // 确保不触发页面刷新
  const pwd = input.value;
  form.querySelector('button').disabled = true;
  try {
    const meta = await fetch(srcUrl, { cache: 'no-store' }).then(r => r.json());
    const salt = b64ToBuf(meta.salt), iv = b64ToBuf(meta.iv);
    const ct = b64ToBuf(meta.ct), tag = meta.tag ? b64ToBuf(meta.tag) : new ArrayBuffer(0);
    const data = concatBuf(ct, tag); // GCM: 密文后拼接 tag
    const key = await deriveKey(pwd, salt);
    const plainBuf = await crypto.subtle.decrypt({ name: 'AES-GCM', iv, tagLength: 128 }, key, data);
    const html = new TextDecoder().decode(plainBuf);
    contentEl.innerHTML = html; // 直接更新内容
    form.remove();  // 移除表单
  } catch (error) {
    alert('解密失败：密码错误或数据损坏');
  } finally {
    form.querySelector('button').disabled = false;
    input.value = '';  // 清空输入框，防止重试
  }
});


